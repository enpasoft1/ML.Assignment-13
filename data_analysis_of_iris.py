# -*- coding: utf-8 -*-
"""data analysis of iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U2f-7SC3vyzWDfRXrMchI6TaSq2qyhGR
"""

from sklearn.datasets import load_iris
import pandas as pd
data= load_iris()
x=pd.DataFrame(data.data, columns=["sepal_length","sepal_width", "petal_length","petal_width"])
y=pd.DataFrame(data.target,columns=["species"])

df=pd.concat([x,y],axis=1)
df

df.head()

df.info()

df.describe()

df.isnull()

df.isnull().sum()

df.iloc[:,1]

df.loc[:,'sepal_width']

df['sepal_width']

df[50:100]

df.loc[50:100,'petal_length']

df.loc[df['petal_width']==0.2]

# Commented out IPython magic to ensure Python compatibility.
from matplotlib.patches import Shadow
# %matplotlib inline
import matplotlib.pyplot as plt
labels= data.target_names
sizes=[len(df.loc[df['species']==percentage]) for percentage in range (len(data.target_names))]
fig1,ax1=plt.subplots()
ax1.pie(sizes, labels=labels,autopct='%1.1f%%',
        shadow=True,startangle=90)
ax1.axis('equal')
plt.show

features=['sepal_length','sepal_width','petal_length','petal_width']
species=data.target_names
for feature in features:
  a_list=[]
  for a in range(len(species)):
    species_found=df.loc[df['species']==a]
    a_list.append(species_found[feature])
    fig1,ax1=plt.subplots()
    ax1.set_title(feature)
    ax1.boxplot(a_list)

features=['sepal_length','sepal_width','petal_length','petal_width']
species=data.target_names
for feature in features:
  a_list=[]
  for a in range(len(species)):
    species_found=df.loc[df['species']==a]
    a_list.append(species_found[feature])
    fig1,ax1=plt.subplots()
    ax1.set_title(feature)
    ax1.violinplot(a_list)

import matplotlib.pyplot as plt
figure=plt.figure(figsize=(15,5))
species=data.target_names
x_features=['sepal_length','sepal_width']
y_features=['petal_length','petal_width']
colors=['red','green','orange']
for x_feature in range(len(x_features)):
    for a in range(len(species)):
        species_found= df.loc[df['species']== a]
        ax1=figure.add_subplot(1,2,x_feature +1)
        ax1.scatter(species_found[x_features[x_feature]],species_found[y_features[x_feature]],color=colors[a],label=species[a])
    ax1.legend()
    ax1.set_title(x_features[x_feature])
    ax1.set_xlabel(x_features)
    ax1.set_ylabel(y_features)

import seaborn as sns
sns.pairplot(df,hue="species")
plt.show()

coefficient_matrix=df.corr()
coefficient_matrix

sns.heatmap(coefficient_matrix)

"""problem 8

By observing the scatterplot matrix it can be seen that the sepal_length,sepal_width  compared to petal_length,petal_width has higher figures than the petal
"""